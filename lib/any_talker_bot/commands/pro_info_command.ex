defmodule AnyTalkerBot.ProInfoCommand do
  @moduledoc """
  Handles command for displaying detailed PRO subscription information.
  """

  alias AnyTalker.Accounts
  alias AnyTalker.Accounts.Subscription
  alias AnyTalkerBot.Reply

  @doc """
  Executes command by showing detailed PRO subscription information.
  """
  def call(%Reply{context: %{extra: %{user: user}}} = reply) do
    case Accounts.get_current_subscription(user) do
      %Subscription{} = sub ->
        Reply.send_message(reply, subscription_info_message(sub), for_dm: true)

      nil ->
        Reply.send_message(reply, no_subscription_message(), for_dm: true)
    end
  end

  defp subscription_info_message(%Subscription{expires_at: expires_at}) do
    expires_text = format_date(expires_at)

    """
    üöÄ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ PRO –∞–∫—Ç–∏–≤–Ω–∞!

    ‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: #{expires_text}

    üî• –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    ‚Ä¢ –°—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—É–∑—ã –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
    ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ –ª—é–±–æ–º —á–∞—Ç–µ –∏ –¥–∞–∂–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö

    üíé –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏—è: 100 —Ä—É–±–ª–µ–π

    –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /buy_pro
    –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè
    """
  end

  defp no_subscription_message do
    """
    ‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ PRO

    üî• –ß—Ç–æ –¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∞ PRO:
    ‚Ä¢ –°—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—É–∑—ã –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
    ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ –ª—é–±–æ–º —á–∞—Ç–µ –∏ –¥–∞–∂–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö

    üíé –°—Ç–æ–∏–º–æ—Å—Ç—å: 100 —Ä—É–±–ª–µ–π

    –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /buy_pro
    """
  end

  defp format_date(nil), do: "–±–µ—Å—Å—Ä–æ—á–Ω–æ"

  defp format_date(%DateTime{} = datetime) do
    datetime
    |> DateTime.shift_zone!("Asia/Yekaterinburg")
    |> Calendar.strftime("%d.%m.%Y –≤ %H:%M –ï–ö–ë")
  end
end
